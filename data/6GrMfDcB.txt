<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><body><p>#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define PARENT(x) (x - 1) / 2
#define LCHILD(x) 2 * x + 1
#define RCHILD(x) 2 * x + 2

typedef struct prvok {
	char meno[100];
	int hodnota;
} PRVOK;

typedef struct halda {
	int velkost;
	PRVOK pole[100000];
} HALDA;

HALDA halda;

void vymen_prvky(PRVOK *prvy, PRVOK *druhy) {
	PRVOK pomocna = *prvy;
	*prvy = *druhy;
	*druhy = pomocna;
}

void vloz(char *meno, int hodnota) {
	PRVOK novy;
	novy.hodnota = hodnota;
	strcpy(novy.meno, meno);
	int i = (halda.velkost)++;
	while (i &amp;&amp; novy.hodnota &gt; halda.pole[PARENT(i)].hodnota) {
		halda.pole[i] = halda.pole[PARENT(i)];
		i = PARENT(i);
	}
	halda.pole[i] = novy;
}

void zorad(int i) {
	int max;
  	if (LCHILD(i) &lt; halda.velkost &amp;&amp; halda.pole[LCHILD(i)].hodnota &gt; halda.pole[i].hodnota)
      max = LCHILD(i);
    else 
      max = i;
	if (RCHILD(i) &lt; halda.velkost &amp;&amp; halda.pole[RCHILD(i)].hodnota &gt; halda.pole[max].hodnota)
		max = RCHILD(i);
	if (max != i) {
		vymen_prvky(&amp;(halda.pole[i]), &amp;(halda.pole[max]));
		zorad(max);
	}
}

char *vyber_najvyssie() {
	char *pom;
	pom = (char *)malloc(100);
	strcpy(pom, halda.pole[0].meno);
	halda.pole[0] = halda.pole[--(halda.velkost)];
	zorad(0);
	return (char *)pom;
}</string.h></stdlib.h></stdio.h></p></body></html>
