<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><body><p>/*****=====--------
Hello there, so you are trying to read my code... good

DM balance - are you annoyed of rond-less deathmatch games,
where none of team balance plugns are possible to work?

I hope so.. ok there is CSDM balancer, somewhere, but frankly, as far as i know it is a bit lame, 
since it works on count of deaths...

This plugin checks teams when player disconects, 
or when player types "/balance" in chat, so noone has to change team
manualy, OR when new round starts...

--Why disconect detection method is better?
In my opinion, difference in teams is actually made by player disconecting, 
so - when player disconects there are fewer players 
and thats why teams lose balance... ok sounds dummb :D I hope you got it (:

--How does it work?
Algorythm
1. Player disconects or goes spectator team / round starts / "/balance"
2. Player counter gets triggered
3. When players are counted, results are calculated to see if it worth to transfer someone
4. If it is worth to transfer someone, it choose random player from strongest team
5. If random player is not from right team or there is an another problem, it repeats
6. When finally it is found, it transfers it, shows chat announcments...
7.* If player connects, he is forced to join weakest team... (if enabled)

--Credits
* Most is made by me (Chill it BanG) "most" is about 97%, if you enjoy math
* Most of code used in team limit part is taken from ConnorMcLeod,
from thread - https://forums.alliedmods.net/showthread.php?t=63818

--Thanks to...
* DonKisgot (https://forums.alliedmods.net/member.php?u=100584) for great ideas and feedback

--ChangeLog
v1.44b - 
* Added dmb_botimunity cvar for not transfering bots.

v1.43 - 
* Fixed "U_R_CT" ML message
* Little optimization.

v1.41 -
* Added ML support, now you can translate messages into your language and switch them with amx_langmenu!

v1.4 - 
* Again, fixed bugs in teamlimit part
* Added sound on tranfer for transfered player (dmb_playsound)
* Added transparent screen fade on transfer for transferd player, in color of his/her new team (dmb_fadescreen)
* Added notification of "say /balance" command:"^3[^4Global Knife^3] Opponents team has more players than yours? Type '/balance' in chat to fix it!"
  (dmb_infodelay). NOTE: if less than 20, it is turned off, and no this is not related to "dmb_printinchat"
* Still have some problems, when teams are badly balanced. Is it get_players with flag "e" fault?

v1.35 -
* Made code easier to read (code was a bit messed up with "indenter")
* Fixed some bugs related to teamlimit
* Fixed runtime native error for "cs_get_user_team"
* Way of searching random player is now faster!

v1.3 - 
* Added dmb_respawn cvar, so players after transfer can be respawned to their new teams (could be useful in such mods as CTF and GG) 
  (hope this will fix bug in CTF, when players after transfer couldn`t respawn)
* Added dmb_printincons cvar, since code is getting bigger and it it quite difficult to see what is happening. 
  Mostly for debuging, this should be set to 0 ;)
* Added teeams checking if someone goes on spectator team.
* Fixed some little bugs, when sometimes balancer stopped on searching random player, but
  remember, if your server is quite full it could take up to 10 secs to find player.
* Get rid of some useless variables.

v1.21 - 
* Found bug, that "disabled" balance plugin if teamlimit was turned on, but noone got forced to weakest team.
* Made "if" tests easier to read in some parts of code.

v1.2 -
* Added teamlimit, that forces to join the weakest team (dmb_teamlimit)(Note:take a look at credits)
* Added cvar to control time after round start when balance is checked
* Added cvars to enable / disable chat announcments
* Little code optimization
* Removed DontChange, since client_print_color_color is not awailable in amxx 1.8.2
* Improved system to ident code, well I feel like I suck at it :D

v1.1 - 
* Fixed runtime error (sometimes it tried to transfer disconnected player, lol)
* Fixed problem when random player was chosen from the weakest team
* Added cvars, chat and console commands
* Added more complex calculations to ensure that balance is needed

v1.0 - 
* Very first version, without cvars and commands 

--Commands
*Chat
/balance - Starts algorythm for checking teams
*Console
dmb_balance - Same as "/balance" just available for admin with "ADMIN_KICK"

--Cvars
dmb_saybalance - (1) enables / (0) disables "say /balance" command (default 1)
dmb_minplayers - Players needed to start balance (default 2)
dmb_roundstarttime - Time (seconds) after round start when team balance can be checked (deafult 10)
dmb_printinchat - (1) enables / (0) disables chat announcments (default 1)
dmb_printincenter - (1) enables / (0) disables screen center messages (default 1)
dmb_printincons - (1) enables / (0) disables console debug informationm shouldn`t be used if plugin since it has bunch of messages (default 0)
dmb_teamlimit - (1) enables / (0) disables team limit. It forces player to join to the weakest team
dmb_respawn - (1) enables / (0) disables respawn after transfer - so players won`t grab ex-team flag (CTF) or stab ex-teammates (GG) (defualt 0)
dmb_infodelay - Time in seconds. How often is "^3[^4Global Knife^3] Opponents team has more players than yours? Type '/balance' in chat to fix it!" message showed. If less than 20 or "dmb_saybalance 0" - disabled (default 120)
dmb_playsound - (1) enables / (0) disables sound on transfer. Sound is just like "beep" (default 1)
dmb_fadescreen - (1) enables / (0) disables transparent screen fade in players new team. Only for transfered player (default 1)
dmb_version - shows version of plugin, you shouldn`t touch this...
-----======*******/

#include <amxmodx>
#include <amxmisc>
#include <cstrike>
#include <hamsandwich>
#include <knife_duels>
#include <colorchat>

#define PLUGIN "DM balance"
#define VERSION "1.43"
#define AUTHOR "STyLa"


// variables for cvars...
new c_dmb_saybalance
new c_dmb_minplayers
new c_dmb_printinchat
new c_dmb_printincenter
new c_dmb_teamlimit
new c_dmb_roundstarttime
new c_dmb_respawn
new c_dmb_printincons
new c_dmb_infodelay
new c_dmb_playsound
new c_dmb_fadescreen
new c_dmb_botimunity

//some variables 
new countCT,countTS,countALL //player count
new randPid //random player id
new randPnick[32] //random player nick
new CTList[32] // list of CT`s 
new TSList[32] // list of T`s


public plugin_init() {
	//plugin info.. 
	register_plugin(PLUGIN, VERSION, AUTHOR)
	//lang file
	register_dictionary("DM_balance.txt")
	
	//commands
	register_concmd("dmb_balance","counter",ADMIN_KICK,"Looks if balance is needed") 
	register_clcmd("say /balance","get_pcount_say",_,"Looks if balance is needed") 
	
	//cvars
	c_dmb_saybalance 	= register_cvar("dmb_saybalance", "0") //controls "say /balance"
	c_dmb_minplayers 	= register_cvar("dmb_minplayers", "2") //players needed to plugin to work
	c_dmb_roundstarttime	= register_cvar("dmb_roundstarttime", "10") //time after round start when balance checks teams
	c_dmb_printinchat 	= register_cvar("dmb_printinchat", "1") //controls chat messages
	c_dmb_printincenter 	= register_cvar("dmb_printincenter", "1") //controls center announcments
	c_dmb_printincons 	= register_cvar("dmb_printincons", "0")//announcments in console, should be 0, since it is more for debugging
	c_dmb_teamlimit 	= register_cvar("dmb_teamlimit", "1") //controls team limit,
	c_dmb_respawn 		= register_cvar("dmb_respawn", "0") //respawn or not to respawn player when player is transfered 
	c_dmb_infodelay		= register_cvar("dmb_infodelay", "999")//time, how often msg with "/balance" should appears, must be grater than "20"
	c_dmb_playsound		= register_cvar("dmb_playsound", "1")//play or not to play sound to player when transfered
	c_dmb_fadescreen	= register_cvar("dmb_fadescreen", "1")//fade screen for a little when transfered?
	c_dmb_botimunity	= register_cvar("dmb_botimunity", "1")//imunity to bots
	register_cvar("dmb_version", "1.43", FCVAR_SERVER | FCVAR_SPONLY) //version, seems legit
	
	//events
	register_logevent( "Event_RoundStart", 2, "0=World triggered", "1=Round_Start" ) //Round start
	register_logevent("team_join",3,"1=joined team") //joined team
	
	if(get_pcvar_num(c_dmb_saybalance) == 1 &amp;&amp; get_pcvar_num(c_dmb_infodelay) &gt; 20){
	set_task(get_pcvar_float(c_dmb_infodelay), "SayBalanceInfo",_,_,_,"b")
	} //spam info about "say /balance command"
	
}

/***
Triggers - turn balance on
***/

//Player disconnect
public client_disconnect(player){
	set_task(1.0,"counter")
	
	//check if chat massages are allowed (dmb_printinchat)
	if(get_pcvar_num(c_dmb_printinchat) == 1 &amp;&amp; countALL &gt;= get_pcvar_num(c_dmb_minplayers)){	
		//print what is happening..						
		client_print_color(0, DontChange,"%L",LANG_PLAYER, "IS_NEEDED")
		}	
	
}
//if round starts - possible there is 1 vs "more than 1" game ;)
public Event_RoundStart() {
	set_task (get_pcvar_float(c_dmb_roundstarttime), "counter")
	
	//check if chat massages are allowed (dmb_printinchat)
	if(get_pcvar_num(c_dmb_printinchat) == 1 &amp;&amp; countALL &gt;= get_pcvar_num(c_dmb_minplayers)){	
		//print what is happening..						
		client_print_color(0, DontChange,"%L",LANG_PLAYER, "IS_NEEDED")
		}	
	
}
//say comand
public get_pcount_say(player) {
	new balancer[32]
	get_user_name(player, balancer,31)
	if(get_pcvar_num(c_dmb_printincons) == 1){
		//client_print_color(0, DontChange,"^3[^4Global Knife^3] %s used /balance", balancer) //just for testing
	}	
	if (get_pcvar_num(c_dmb_saybalance) == 1){
		
		counter()
		
	//check if chat massages are allowed (dmb_printinchat)
		if(get_pcvar_num(c_dmb_printinchat) == 1 &amp;&amp; countALL &gt;= get_pcvar_num(c_dmb_minplayers)){	
		//print what is happening..
		new used_bal[64]
		formatex(used_bal,63,"%L", LANG_PLAYER, "USED_BAL", balancer)
		client_print_color(0, DontChange,used_bal)
		}	
	}
}

/***
Here the fun starts (:
***/

//Just counting players and going to next step
public counter(){
	
	
	
	new printcons = get_pcvar_num(c_dmb_printincons)
	if(get_pcvar_num(c_dmb_botimunity)){
		get_players(CTList, countCT, "ce", "CT") //Gets count of CT`s
		get_players(TSList, countTS, "ce", "TERRORIST") //Gets count of T`s
	}else{
		get_players(CTList, countCT, "e", "CT") //Gets count of CT`s
		get_players(TSList, countTS, "e", "TERRORIST") //Gets count of T`s
	}
	countALL = countCT + countTS //gets everyone counted
	
	//check if console commands are allowed
	if(printcons){
		client_print_color(0, DontChange,"^3[^4Global Knife^3] Counting") //just for testing
	}
	if(countALL &gt;= get_pcvar_num(c_dmb_minplayers)){
		set_task (1.0,"balance_calc")
		if(printcons){
			client_print_color(0, DontChange,"^3[^4Global Knife^3]^4CT`s:%d, TS: %d ALL: %d /// Enough players",countCT,countTS,countALL) //just for testing
		}
	}
	else {
		if(printcons){
			client_print_color(0, DontChange,"^3[^4Global Knife^3]^4CT`s:%d, TS: %d ALL: %d /// Not enough players",countCT,countTS,countALL) //just for testing
		}
	}
}//end of counter




//Just counting... used in teamlimit part, in this case it won`t go to the next step
public get_pcount() {	
	if(get_pcvar_num(c_dmb_botimunity)){
		get_players(CTList, countCT, "ce", "CT") //Gets count of CT`s
		get_players(TSList, countTS, "ce", "TERRORIST") //Gets count of T`s
	}else{
		get_players(CTList, countCT, "e", "CT") //Gets count of CT`s
		get_players(TSList, countTS, "e", "TERRORIST") //Gets count of T`s
	}
	countALL = countCT + countTS //gets everyone counted
	
	//check if console commands are allowed
	if(get_pcvar_num(c_dmb_printincons) == 1){
		client_print_color(0, DontChange,"^3[^4Global Knife^3] Counting, because of join_team") //just for testing
		client_print_color(0, DontChange,"^3[^4Global Knife^3]CT`s:%d, TS: %d ALL: %d",countCT,countTS,countALL) //just for testing
	}
		
}//end of get_pcount
		

		
		
//check if balance is needed			
public balance_calc() {	
	new printcons = get_pcvar_num(c_dmb_printincons)
	//test #1 and 2 - it would be useless to do something if teams are well balanced or there ar not enough players
	if(countCT != countTS &amp;&amp; countALL &gt;= get_pcvar_num(c_dmb_minplayers)){ 
		if(printcons){
			client_print_color(0, DontChange,"^3[^4Global Knife^3] Test #1 and #2 are true") //just for testing
		}			
		//test #3 - it would be useless to do something if the difference is just 1 player
		if (countCT +1 != countTS &amp;&amp; countCT != countTS +1){
			if(printcons){
				client_print_color(0, DontChange,"^3[^4Global Knife^3] Test #3 is true!") //just for testing
			}				
			//ok, if it gets there it seems to be legit, to transfer player!
			//choosing the strongest team
			if(countCT &gt; countTS){ //if CT`s ar more than T`s
				if(printcons){
					client_print_color(0, DontChange,"^3[^4Global Knife^3] Going to transfer CT") //just for testing
				}
				trans_randomCT()
					
			}
			if(countTS &gt; countCT) // if T`s ...
			{
				if(printcons){
					client_print_color(0, DontChange,"^3[^4Global Knife^3] Going to transfer TS") //just for testing
				}
				trans_randomTS()
					
			}
			if(countCT == countTS){
				//how dafaq this could happen? :D
				//be cool, just do nothing. -.-
				if(printcons){
					client_print_color(0, DontChange,"^3[^4Global Knife^3] This message should never appear (CT=TS)") //just for testing
				
				}	
			}
			
			}//end of test#3
			}//end of test#2 and #1
		} //end of balance_calc
		
				
							
				
				
//And finaly, moment of transfer (:
//If CT needs to be transfered... find random CT			
public trans_randomCT(){

	new printcons = get_pcvar_num(c_dmb_printincons)
	if(printcons){
		client_print_color(0, DontChange,"^3[^4Global Knife^3] Searching for random CT") //just for testing
	}
	
	new CT[32] = "CT"
	new randomCT
	new teamCT[32]
	//so random player	
	randomCT = random_num(0, countCT -1)
	
	randPid = CTList[randomCT]
	//Check if player really comes from right team... shit may happen :D
	// ... AND if player is in server, do the thing, if not, repeat!
	if (is_user_connected(randPid)){				
		get_user_team(randPid,teamCT,31)
		//if random player is CT					
		if(equali(teamCT,CT)){
			if(!is_user_in_duel(randPid))
				cs_set_user_team(randPid,CS_TEAM_T,CS_T_TERROR)
			if(printcons){
				client_print_color(0, DontChange,"^3[^4Global Knife^3] Found the winner! with id: %d",randPid) //just for testing
			}	
								
			//Lets say that someone is transfered, so people would know that :D
			//Check if print messages are enabled (dmb_printinchat)
						
			if(get_pcvar_num(c_dmb_printinchat) == 1){
				get_user_name(randPid,randPnick,31)
				new is_now_ter[64]
				formatex(is_now_ter, 63, "%L",LANG_PLAYER,"IS_NOW_T", randPnick)
				client_print_color(0, DontChange,is_now_ter)
			}
								
			//Print message in center of screen, to our conest winner.. lol
			//Check if center messages ar allowed (dmb_printincenter)
			if(get_pcvar_num(c_dmb_printincenter) == 1){
				client_print_color(randPid,print_center,"%L", LANG_PLAYER, "U_R_T")
			}
			//play "beep" sound, if allowed
			if(get_pcvar_num(c_dmb_playsound)){
				client_cmd(randPid, "spk buttons/blip2")
			}
			//fade screen red, if allowed
			if(get_pcvar_num(c_dmb_fadescreen)){
				message_begin(MSG_ONE, get_user_msgid("ScreenFade"), {0,0,0}, randPid)
				write_short(1&lt;&lt;10)
				write_short(1&lt;&lt;10)
				write_short(0x0000)
				write_byte(255)
				write_byte(0)
				write_byte(0)
				write_byte(75)
				message_end()
			}
			//if respawn is enabled, respawn to new spawn		
			if(get_pcvar_num(c_dmb_respawn) == 1){
				//ExecuteHamB(Ham_CS_RoundRespawn, randPid)
				set_task(0.5,"spawner")
				if(printcons){
					client_print_color(0, DontChange,"^3[^4Global Knife^3] Prepearing to spawn a player!") //just for testing
				}	
			}
		}
		else {
			//if player is not CT O_O, count again 
			set_task (0.1,"counter")
		}
	}
	else {
		//If random player is not connected count again, maybe now player counts are better		
		set_task (0.1,"counter")
		
		if(printcons){
			client_print_color(0, DontChange,"^3[^4Global Knife^3] Something went wrong, randPid is not connected. (ID:%d)", randPid) //just for testing
		}
	
	}
}
				
							
				
//If TS needs to be transfered ... find random TS			
public trans_randomTS(){
	new printcons = get_pcvar_num(c_dmb_printincons)
	if(printcons){
		client_print_color(0, DontChange,"^3[^4Global Knife^3] Searching for random TS") //just for testing
	}	
	new TERRORIST[32] = "TERRORIST"	
	new randomTS
	new teamTS[32]
	//so random player	
	randomTS = random_num(0, countTS -1)
	
	randPid = TSList[randomTS]
	//Check if player really comes from right team... shit may happen :D
	if (is_user_connected(randPid)){				
		get_user_team(randPid,teamTS,31)
	
	//check if random player comes from T team		
		if(equali(teamTS,TERRORIST)){	
			if(!is_user_in_duel(randPid))
				cs_set_user_team(randPid,CS_TEAM_CT,CS_CT_SAS)
			if(printcons){
				client_print_color(0, DontChange,"^3[^4Global Knife^3] Found the winner! with id: %d",randPid) //just for testing
			}	
			//lets say that someone is transfered, so people would know that :D
			//check if allowed to print...
			if(get_pcvar_num(c_dmb_printinchat) == 1){	
				get_user_name(randPid,randPnick,31)
				new is_now_ct[64]
				formatex(is_now_ct, 63, "%L",LANG_PLAYER,"IS_NOW_CT", randPnick)
				client_print_color(0, DontChange,is_now_ct)
			}
			//Print msg in center + check if allowed
			if(get_pcvar_num(c_dmb_printincenter) == 1){
				client_print_color(randPid,print_center,"%L", LANG_PLAYER, "U_R_CT")
			}
			
			//play "beep" sound, if allowed
			if(get_pcvar_num(c_dmb_playsound)){
				client_cmd(randPid, "spk buttons/blip2")
			}
			//fade screen blue, if allowed
			if(get_pcvar_num(c_dmb_fadescreen)){
				message_begin(MSG_ONE, get_user_msgid("ScreenFade"), {0,0,0}, randPid)
				write_short(1&lt;&lt;10)
				write_short(1&lt;&lt;10)
				write_short(0x0000)
				write_byte(0)
				write_byte(0)
				write_byte(255)
				write_byte(75)
				message_end()
			}
			
			//if respawn is enabled, respawn to new spawn	
			if(get_pcvar_num(c_dmb_respawn) == 1){
			//ExecuteHamB(Ham_CS_RoundRespawn, randPid)
				set_task(0.5,"spawner")
			}
		}
			else {
				//if player has been disconnected, count again, maybe now player counts are better
				set_task (0.5,"counter")
			}
		}
		else {
			set_task (0.5,"counter")
		
			if(printcons){
				client_print_color(0, DontChange,"^3[^4Global Knife^3] Something went wrong, random player is not connected") //just for testing
			}
		}
	}

	
	
	
//The respawner.. lol, if it is enabled
public spawner(){
	ExecuteHamB(Ham_CS_RoundRespawn, randPid)
	if(get_pcvar_num(c_dmb_printincons) == 1){
		client_print_color(0, DontChange,"^3[^4Global Knife^3] Player %s respawned after transfer",randPnick) //just for testing
	}	
}
	
public SayBalanceInfo(){
	//client_print_color(0, DontChange,"%L", LANG_PLAYER, "SAY_CMD_AD")
}
	
	
	
				
///////////
// Start of teams limiter, that does not allow to join to the strongest team
// Actually, it allows, but quickly transfers to the weakest team
//////////
/// code taken from ConnorMcLeod (https://forums.alliedmods.net/member.php?u=18946) 
/// from thread - https://forums.alliedmods.net/showthread.php?t=63818
/// just edited to fit for limit teams, since I am beginner at coding :D
/////////


public team_join() {	
	if(get_pcvar_num(c_dmb_teamlimit) == 1){	
		//get count of players at first
		get_pcount()
		new loguser[80], name[32] 
		new temp[2]
		read_logargv(0, loguser, 79) 
		parse_loguser(loguser, name, 31) 

		new id = get_user_index(name) 

		if(is_user_bot(id)) 
			return 

		read_logargv(2, temp, 1) 
		switch(temp[0]) 
		{ 
			case 'T' : 
			{ 
				if(countTS -1&gt; countCT &amp;&amp; is_user_connected(id)){ 
					if(!is_user_in_duel(id))
						cs_set_user_team(id,CS_TEAM_CT,CS_CT_SAS)
					if(get_pcvar_num(c_dmb_printincons) == 1){
						client_print_color(0, DontChange,"^3[^4Global Knife^3] Forced player to join CT. CT`s: %d T`s: %d ALL: %d", countCT,countTS,countALL) //just for testing
					}	
				}

			} 
			case 'C' : 
			{
				if(countCT -1 &gt; countTS &amp;&amp; is_user_connected(id)){
					if(!is_user_in_duel(id))
						cs_set_user_team(id,CS_TEAM_T,CS_T_TERROR)
					if(get_pcvar_num(c_dmb_printincons) == 1){
							client_print_color(0, DontChange,"^3[^4Global Knife^3] Forced player to join TS. CT`s: %d T`s: %d ALL: %d", countCT,countTS,countALL) //just for testing	
					}	
				}
			} 
			case 'S' : 
			{ 
				set_task(0.5, "counter")
				if(get_pcvar_num(c_dmb_printincons) == 1){
					client_print_color(0, DontChange,"^3[^4Global Knife^3] Player joined Spectator. CT`s: %d T`s: %d ALL: %d", countCT,countTS,countALL) //just for testing
				}	
			} 
		} 
	}	
}//end of team_join
//end of whole code (:</colorchat></knife_duels></hamsandwich></cstrike></amxmisc></amxmodx></p></body></html>
