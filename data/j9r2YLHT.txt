<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><body><p>if (string.IsNullOrEmpty(path))
        {
            throw new ArgumentNullException(path, "&#1055;&#1091;&#1090;&#1100; &#1082; &#1082;&#1072;&#1090;&#1072;&#1083;&#1086;&#1075;&#1091; &#1076;&#1086;&#1083;&#1078;&#1077;&#1085; &#1073;&#1099;&#1090;&#1100; &#1079;&#1072;&#1076;&#1072;&#1085;.");
        }
	
[System.Serializable]
public class PermitionDeniedException : System.Exception
{
     public PermitionDeniedException() : base("&#1055;&#1086;&#1083;&#1100;&#1079;&#1086;&#1074;&#1072;&#1090;&#1077;&#1083;&#1102; &#1085;&#1077; &#1076;&#1086;&#1089;&#1090;&#1091;&#1087;&#1077;&#1085; &#1101;&#1090;&#1086;&#1090; &#1084;&#1077;&#1090;&#1086;&#1076;") { }
     public PermitionDeniedException(string message) : base(message) { }
     public PermitionDeniedException(string message, Exception inner ) : base( message, inner ) { }
     protected PermitionDeniedException(SerializationInfo info, StreamingContext context) : base(info,context ) { }
}

try
{
    SomeMethod();
}
catch (PermitionDeniedException ex)
{
    _logger.Error(ex, "&#1057;&#1086;&#1086;&#1073;&#1097;&#1077;&#1085;&#1080;&#1077;")
}

private static void UnhandledExceptionTrapper(object sender, UnhandledExceptionEventArgs e)
{
    var ex = e.ExceptionObject;        
    if (ex.GetType() == typeof(ExceptionType1))
    {
        _logger.Error(ex, "&#1057;&#1086;&#1086;&#1073;&#1097;&#1077;&#1085;&#1080;&#1077;");
        // TODO: &#1059;&#1074;&#1077;&#1076;&#1086;&#1084;&#1080;&#1090;&#1100; &#1087;&#1086;&#1083;&#1100;&#1079;&#1086;&#1074;&#1072;&#1090;&#1077;&#1083;&#1103;
    }
    else if (ex.GetType() == typeof(ExceptionType2))
    {
        _logger.Fatal(ex, "&#1057;&#1086;&#1086;&#1073;&#1097;&#1077;&#1085;&#1080;&#1077;");
        // &#1069;&#1082;&#1089;&#1090;&#1088;&#1077;&#1085;&#1085;&#1086; &#1079;&#1072;&#1074;&#1077;&#1088;&#1096;&#1080;&#1090;&#1100; &#1087;&#1088;&#1080;&#1083;&#1086;&#1078;&#1077;&#1085;&#1080;&#1077;
    }
    else
    {
        _logger.Fatal(ex, "&#1057;&#1086;&#1086;&#1073;&#1097;&#1077;&#1085;&#1080;&#1077;");
        // &#1052;&#1086;&#1078;&#1085;&#1086; &#1089;&#1076;&#1077;&#1083;&#1072;&#1090;&#1100; &#1076;&#1072;&#1084;&#1087; &#1080; &#1079;&#1072;&#1074;&#1077;&#1088;&#1096;&#1080;&#1090;&#1100; &#1087;&#1088;&#1080;&#1083;&#1086;&#1078;&#1077;&#1085;&#1080;&#1077;
    }
}</p></body></html>
